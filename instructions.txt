To collage images from download links on a webpage, you can use the `requests` and `BeautifulSoup` libraries in Python. Here is an example script that downloads the images from the links on a webpage and collages them together using the `PIL` library:

```python
import requests
from bs4 import BeautifulSoup
from PIL import Image

# URL of the webpage containing the image links
url = "https://example.com"

# Get the webpage content using requests library
response = requests.get(url)

# Parse the HTML content using BeautifulSoup library
soup = BeautifulSoup(response.content, 'html.parser')

# Find all the image links on the webpage
image_links = []
for link in soup.find_all('a'):
    href = link.get('href')
    if href.endswith('.jpg') or href.endswith('.png'):
        image_links.append(href)

# Download the images and add them to a list
images = []
for link in image_links:
    response = requests.get(link)
    img = Image.open(BytesIO(response.content))
    images.append(img)

# Determine the dimensions of the final collage
total_width = 0
max_height = 0
for img in images:
    total_width += img.width
    max_height = max(max_height, img.height)

# Create a new image object for the collage
collage = Image.new('RGB', (total_width, max_height))

# Paste the images onto the collage
x_offset = 0
for img in images:
    collage.paste(img, (x_offset, 0))
    x_offset += img.width

# Save the collage as a new image
collage.save('collage.jpg')
```

Note: This script assumes that all the image links on the webpage end with either `.jpg` or `.png` extensions. You may need to modify the code to handle other image formats as well.